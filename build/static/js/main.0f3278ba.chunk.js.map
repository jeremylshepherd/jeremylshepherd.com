{"version":3,"sources":["components/Nav.js","components/Hero.js","utils.js","components/Footer.js","components/Modal.js","App.js","serviceWorker.js","index.js"],"names":["Nav","react_default","a","createElement","className","id","type","htmlFor","href","aria-label","Hero","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","showModal","bind","assertThisInitialized","src","altText","_this2","tiles","images","map","img","i","key","p","concat","farm","server","secret","alt","title","onClick","React","Component","Footer","aria-hidden","Modal","hideModal","hide","document","body","style","overflowY","ref","App","state","photos","show","getPhotos","fetch","then","res","json","data","setState","photoset","photo","err","console","log","toString","_this$state","components_Nav","components_Hero","components_Footer","components_Modal","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0f3278ba.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Nav = () => (\n  <nav className=\"navbar\">\n    <div className=\"navbar-brand\">\n      <h3 className=\"sig\">Jeremy L. Shepherd | Dayton Photographer</h3>\n    </div>\n    <div className=\"navbar-menu\">\n      <input id=\"navbar-check\" type=\"checkbox\" className=\"checkbox\" />\n      <label htmlFor=\"navbar-check\">\n        <span className=\"icon-bar ib-top\" />\n        <span className=\"icon-bar ib-mid\" />\n        <span className=\"icon-bar ib-bot\" />\n      </label>\n      <span className=\"navbar-nav\">\n        <a\n          className=\"nav-link\"\n          href=\"https://www.facebook.com/jeremylshepherdphotography\"\n          aria-label=\"Navigate to Jeremy L. Shepherd Photogrpahy's Facebook page\"\n        >\n          <i className=\"fa fa-facebook-official fa-2x\" />\n        </a>\n        <a\n          className=\"nav-link\"\n          href=\"https://twitter.com/jeremylshepherd\"\n          aria-label=\"Navigate to Jeremy L. Shepherd Photogrpahy's Twitter page\"\n        >\n          <i className=\"fa fa-twitter-square fa-2x\" />\n        </a>\n        <a\n          className=\"nav-link \"\n          href=\"https://www.instagram.com/jeremylshepherdphotography\"\n          aria-label=\"Navigate to Jeremy L. Shepherd Photogrpahy's Instagram page\"\n        >\n          <i className=\"fa fa-instagram fa-2x\" />\n        </a>\n      </span>\n    </div>\n  </nav>\n);\n\nexport default Nav;\n","import React from \"react\";\nimport { src, srcLarge } from \"../utils\";\n\nclass Hero extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.showModal = this.showModal.bind(this);\n  }\n\n  showModal(src, altText) {\n    this.props.showModal(src, altText);\n  }\n\n  render() {\n    const tiles = this.props.images.map((img, i) => {\n      return (\n        <img\n          key={img.id}\n          className=\"tile\"\n          src={src(img)}\n          alt={img.title}\n          onClick={() => this.showModal(srcLarge(img), img.title)}\n        />\n      );\n    });\n    return (\n      <div className=\"wrapper\">\n        <div className=\"tableau\">{tiles}</div>\n      </div>\n    );\n  }\n}\n\nexport default Hero;\n","const apiURL =\n  \"https://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=a8472a2f263f3db4996de45f259de40d&photoset_id=72157633202936546&user_id=73674095%40N03&format=json&nojsoncallback=1\";\n\nconst tempURL = `https://api.flickr.com/services/rest/?method=flickr.photosets.getPhotos&api_key=1f1b0cf0200261d40ccb46c9ab730878&photoset_id=72157633202936546&user_id=73674095%40N03&format=json&nojsoncallback=1`;\n\nconst src = p =>\n  `https://farm${p.farm}.staticflickr.com/${p.server}/${p.id}_${p.secret}.jpg`;\nconst srcLarge = p =>\n  `https://farm${p.farm}.staticflickr.com/${p.server}/${p.id}_${\n    p.secret\n  }_b.jpg`;\n\nexport { apiURL, tempURL, src, srcLarge };\n","import React from \"react\";\n\nconst Footer = () => (\n  <nav className=\"navbar footer\">\n    <span className=\"navbar-brand\" id=\"contact\">\n      <i className=\"fa fa-phone\" aria-hidden=\"true\" />\n      <span> 937.502.1195 </span>\n      <i className=\"fa fa-envelope-o\" aria-hidden=\"true\" />\n      <span> jeremy@jeremylshepherd.com</span>\n    </span>\n  </nav>\n);\n\nexport default Footer;\n","import React from \"react\";\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  hideModal() {\n    this.props.hide();\n  }\n\n  componentDidMount() {\n    document.body.style.overflowY = \"hidden\";\n  }\n\n  componentWillUnmount() {\n    document.body.style.overflowY = \"unset\";\n  }\n\n  render() {\n    return (\n      <div ref=\"modal\" className=\"modal\" onClick={this.hideModal}>\n        <img\n          className=\"lightbox\"\n          src={this.props.src}\n          alt={this.props.altText}\n        />\n        <span\n          className=\"fa fa-times-circle fa-2x close-icon\"\n          onClick={this.hideModal}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Modal;\n","import React from \"react\";\n\nimport Nav from \"./components/Nav\";\nimport Hero from \"./components/Hero\";\nimport Footer from \"./components/Footer\";\nimport Modal from \"./components/Modal\";\n\nimport { tempURL } from \"./utils\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      photos: [],\n      show: false,\n      src: \"\",\n      altText: \"\"\n    };\n\n    this.getPhotos = this.getPhotos.bind(this);\n    this.showModal = this.showModal.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  getPhotos() {\n    fetch(tempURL)\n      .then(res => res.json())\n      .then(\n        data => {\n          this.setState({\n            photos: data.photoset.photo\n          });\n        },\n        err => {\n          console.log(err.toString());\n        }\n      );\n  }\n\n  showModal(src, altText) {\n    this.setState({\n      show: true,\n      src,\n      altText\n    });\n  }\n\n  hideModal() {\n    this.setState({\n      show: false,\n      src: \"\"\n    });\n  }\n\n  componentDidMount() {\n    this.getPhotos();\n  }\n\n  render() {\n    const { altText, photos, show, src } = this.state;\n    return (\n      <div>\n        <Nav />\n        <Hero images={photos} showModal={this.showModal} show={show} />\n        <Footer />\n        {show ? (\n          <Modal\n            show={show}\n            hide={this.hideModal}\n            src={src}\n            altText={altText}\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}